# Copyright 2019-2022 the Kubeapps contributors.
# SPDX-License-Identifier: Apache-2.0

# kubeapps-operator has cluster-admin
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeapps-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  # dex does not allow group claims when using the static connector
  # https://github.com/dexidp/dex/issues/1080
  # So instead use the testing of groups with the ldap access only.
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: oidc:kubeapps-operator@example.com
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: oidc:kubeapps-operators
  # pinniped doesn't use a prefix, unlike the cluster oidc config:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: kubeapps-operator@example.com
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: kubeapps-operators
# kubeapps-user has access only to the kubeapps-user-namespace namespace
---
kind: Namespace
apiVersion: v1
metadata:
  name: kubeapps-user-namespace
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeapps-user
  namespace: kubeapps-user-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: oidc:kubeapps-user@example.com
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: oidc:kubeapps-users
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeapps-user-apprepositories-read
  namespace: kubeapps-user-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeapps:kubeapps:apprepositories-read
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: oidc:kubeapps-user@example.com
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: oidc:kubeapps-users
---
# Currently unnecessary (when kubeapps operators are already cluster-admin) but
# included to be explicit and plan to replace cluster-admin for kubeapps
# operators with something less privileged.
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubeapps-operator-apprepositories-write
  namespace: kubeapps-user-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeapps:kubeapps:apprepositories-write
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: oidc:kubeapps-operator@example.com
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: oidc:kubeapps-operators
